version: "3.8"
services:
  mongodb:
    image: mongo:6.0
    container_name: health-app-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: healthapp
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - health-app-network

  redis:
    image: redis:7-alpine
    container_name: health-app-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - health-app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: health-app-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/healthapp?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: super_strong_secret_ahmedben11235813
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    working_dir: /app
    networks:
      - health-app-network

  frontend-web:
    build:
      context: ./frontend-web
      dockerfile: Dockerfile
    container_name: health-app-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      VITE_API_URL: http://backend:5000/api
      VITE_SOCKET_URL: http://backend:5000
    depends_on:
      - backend
    networks:
      - health-app-network

  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    container_name: health-app-admin
    restart: unless-stopped
    ports:
      - "3001:80"
    environment:
      VITE_API_URL: http://backend:5000/api
    depends_on:
      - backend
    networks:
      - health-app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: health-app-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - health-app-network

  grafana:
    image: grafana/grafana:latest
    container_name: health-app-grafana
    restart: unless-stopped
    ports:
      - "3030:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - health-app-network

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  health-app-network:
    driver: bridge
